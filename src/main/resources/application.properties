#logging.level.org.springframework: DEBUG

## Hibernate DDL auto
spring.jpa.hibernate.ddl-auto=none
#none This is the default for MySQL, no change to the database structure.
#
#update Hibernate changes the database according to the given Entity structures.
#
#create Creates the database every time, but don\u2019t drop it when close.
#
#create-drop Creates the database then drops it when the SessionFactory closes.
#The default for H2 and other embedded databases is create-drop, but for others like MySQL is none

## Database Connection Settings 
#spring.datasource.url=jdbc:mysql://localhost:3306/Hoosier
#spring.datasource.username=hoosier
#spring.datasource.password=hoosier

spring.datasource.url= jdbc:mysql://db.soic.indiana.edu:3306/p565f18_srajash
spring.datasource.password= my+sql=p565f18_srajash
spring.datasource.username= p565f18_srajash
#driver-class-name: com.mysql.jdbc.Driver

## Specify the DBMS
spring.jpa.database= MYSQL

## Showing executed query/ not logging
spring.jpa.show-sql = true

## Naming Strategy
spring.jpa.hibernate.naming-strategy= org.hibernate.cfg.ImprovedNamingStrategy

## Use Spring JPA properties. Specify the native dialect for hibernate to use
spring.jpa.propertie.hibernate.dialect=org.hibernate.dialect.MySQL5Dialect

#New applications that use the @GeneratedValue annotation should set the value for the hibernate.id.new_generator_mappings property to true. This is the preferred setting because it is more portable across different databases. In most cases it is more efficient and, in some cases, it addresses compatibility with the JPA 2 specification.

##Sequence
#hibernate.id.new_generator_mappings=false
spring.jpa.properties.hibernate.id.new_generator_mappings=false



###Tomcat port
server.port=80